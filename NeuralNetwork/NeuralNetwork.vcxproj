<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{d3c4b197-2a03-4210-b9e8-938deb754c8e}</ProjectGuid>
    <RootNamespace>NeuralNetwork</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <ProjectExtensions>
    <VisualStudio>
      <UserProperties MocDir=".\GeneratedFiles\$(ConfigurationName)" UicDir=".\GeneratedFiles" RccDir=".\GeneratedFiles" lupdateOptions="" lupdateOnBuild="0" lreleaseOptions="" MocOptions="" />
    </VisualStudio>
  </ProjectExtensions>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <TargetName>$(ProjectName)d</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <TargetName>$(ProjectName)</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level1</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(XTL_PATH);$(XTENSOR_PATH);$(XTENSOR_BLAS_PATH);$(SDL2_DIR)\include;$(OPENCV_DIR)\..\..\include;gl3w;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level1</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(XTL_PATH);$(XTENSOR_PATH);$(XTENSOR_BLAS_PATH);$(SDL2_DIR)\include;$(OPENCV_DIR)\..\..\include;gl3w;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="ActivationFunctionFactory.cpp" />
    <ClCompile Include="ActivationFunctionNeuralLayer.cpp" />
    <ClCompile Include="AdadeltaOptimizer.cpp" />
    <ClCompile Include="AdagradOptimizer.cpp" />
    <ClCompile Include="AveragePooling1DNeuralLayer.cpp" />
    <ClCompile Include="AveragePooling2DNeuralLayer.cpp" />
    <ClCompile Include="AveragePooling3DNeuralLayer.cpp" />
    <ClCompile Include="ClassifierVisualizer.cpp" />
    <ClCompile Include="Convolution1DNeuralLayer.cpp" />
    <ClCompile Include="Convolution2DNeuralLayer.cpp" />
    <ClCompile Include="ConvolutionNeuralLayer.cpp" />
    <ClCompile Include="CReLUFunction.cpp" />
    <ClCompile Include="Convolution3DNeuralLayer.cpp" />
    <ClCompile Include="CrossEntropyErrorFunction.cpp" />
    <ClCompile Include="DropoutNeuralLayer.cpp" />
    <ClCompile Include="ELUFunction.cpp" />
    <ClCompile Include="ExponentialFunction.cpp" />
    <ClCompile Include="FlattenNeuralLayer.cpp" />
    <ClCompile Include="GELUFunction.cpp" />
    <ClCompile Include="HardSigmoidFunction.cpp" />
    <ClCompile Include="ImageClassVisualizer.cpp" />
    <ClCompile Include="IdentityFunction.cpp" />
    <ClCompile Include="ActivationFunction.cpp" />
    <ClCompile Include="FunctionVisualizer.cpp" />
    <ClCompile Include="gl3w\GL\gl3w.c" />
    <ClCompile Include="imgui.cpp" />
    <ClCompile Include="imgui_demo.cpp" />
    <ClCompile Include="imgui_draw.cpp" />
    <ClCompile Include="imgui_impl_opengl3.cpp" />
    <ClCompile Include="imgui_impl_sdl.cpp" />
    <ClCompile Include="imgui_widgets.cpp" />
    <ClCompile Include="InputNeuralLayer.cpp" />
    <ClCompile Include="LeakyReLUFunction.cpp" />
    <ClCompile Include="MaxoutNeuralLayer.cpp" />
    <ClCompile Include="MaxPooling1DNeuralLayer.cpp" />
    <ClCompile Include="MaxPooling2DNeuralLayer.cpp" />
    <ClCompile Include="MaxPooling3DNeuralLayer.cpp" />
    <ClCompile Include="MeanSquareErrorFunction.cpp" />
    <ClCompile Include="NetworkVisualizer.cpp" />
    <ClCompile Include="NeuralLayer.cpp" />
    <ClCompile Include="NeuralNetwork.cpp" />
    <ClCompile Include="DenseNeuralLayer.cpp" />
    <ClCompile Include="Optimizer.cpp" />
    <ClCompile Include="ParameterizedNeuralLayer.cpp" />
    <ClCompile Include="ParameterSet.cpp" />
    <ClCompile Include="PReLUFunction.cpp" />
    <ClCompile Include="QuadraticFunction.cpp" />
    <ClCompile Include="ReLU6Function.cpp" />
    <ClCompile Include="ReLUFunction.cpp" />
    <ClCompile Include="ReLUnFunction.cpp" />
    <ClCompile Include="ReshapeNeuralLayer.cpp" />
    <ClCompile Include="SELUFunction.cpp" />
    <ClCompile Include="SGDOptimizer.cpp" />
    <ClCompile Include="ShapeNeuralLayer.cpp" />
    <ClCompile Include="SigmoidFunction.cpp" />
    <ClCompile Include="SoftmaxNeuralLayer.cpp" />
    <ClCompile Include="SoftplusFunction.cpp" />
    <ClCompile Include="AbsoluteReLUFunction.cpp" />
    <ClCompile Include="SoftsignFunction.cpp" />
    <ClCompile Include="SqueezeNeuralLayer.cpp" />
    <ClCompile Include="Test.cpp" />
    <ClCompile Include="SwishFunction.cpp" />
    <ClCompile Include="TanhFunction.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="AbsoluteReLUFunction.h" />
    <ClInclude Include="ActivationFunctionFactory.h" />
    <ClInclude Include="ActivationFunctionNeuralLayer.h" />
    <ClInclude Include="AdadeltaOptimizer.h" />
    <ClInclude Include="AdagradOptimizer.h" />
    <ClInclude Include="AveragePooling1DNeuralLayer.h" />
    <ClInclude Include="AveragePooling2DNeuralLayer.h" />
    <ClInclude Include="ClassifierVisualizer.h" />
    <ClInclude Include="Convolution1DNeuralLayer.h" />
    <ClInclude Include="Convolution2DNeuralLayer.h" />
    <ClInclude Include="ConvolutionNeuralLayer.h" />
    <ClInclude Include="CReLUFunction.h" />
    <ClInclude Include="Convolution3DNeuralLayer.h" />
    <ClInclude Include="CrossEntropyErrorFunction.h" />
    <ClInclude Include="DropoutNeuralLayer.h" />
    <ClInclude Include="ErrorFunction.h" />
    <ClInclude Include="ExponentialFunction.h" />
    <ClInclude Include="ELUFunction.h" />
    <ClInclude Include="FlattenNeuralLayer.h" />
    <ClInclude Include="FunctionVisualizer.h" />
    <ClInclude Include="GELUFunction.h" />
    <ClInclude Include="gl3w\GL\gl3w.h" />
    <ClInclude Include="gl3w\GL\glcorearb.h" />
    <ClInclude Include="HardSigmoidFunction.h" />
    <ClInclude Include="AveragePooling3DNeuralLayer.h" />
    <ClInclude Include="ImageClassVisualizer.h" />
    <ClInclude Include="imconfig.h" />
    <ClInclude Include="imgui.h" />
    <ClInclude Include="imgui_impl_opengl3.h" />
    <ClInclude Include="imgui_impl_sdl.h" />
    <ClInclude Include="imgui_internal.h" />
    <ClInclude Include="imstb_rectpack.h" />
    <ClInclude Include="imstb_textedit.h" />
    <ClInclude Include="imstb_truetype.h" />
    <ClInclude Include="InputNeuralLayer.h" />
    <ClInclude Include="LeakyReLUFunction.h" />
    <ClInclude Include="MaxoutNeuralLayer.h" />
    <ClInclude Include="MaxPooling1DNeuralLayer.h" />
    <ClInclude Include="MaxPooling2DNeuralLayer.h" />
    <ClInclude Include="MaxPooling3DNeuralLayer.h" />
    <ClInclude Include="MeanSquareErrorFunction.h" />
    <ClInclude Include="NetworkVisualizer.h" />
    <ClInclude Include="NeuralLayer.h" />
    <ClInclude Include="NeuralNetworkFileHelper.h" />
    <ClInclude Include="Optimizer.h" />
    <ClInclude Include="ParameterizedNeuralLayer.h" />
    <ClInclude Include="ParameterSet.h" />
    <ClInclude Include="IdentityFunction.h" />
    <ClInclude Include="ActivationFunction.h" />
    <ClInclude Include="NeuralNetwork.h" />
    <ClInclude Include="DenseNeuralLayer.h" />
    <ClInclude Include="PReLUFunction.h" />
    <ClInclude Include="QuadraticFunction.h" />
    <ClInclude Include="ReLU6Function.h" />
    <ClInclude Include="ReLUFunction.h" />
    <ClInclude Include="ReLUnFunction.h" />
    <ClInclude Include="ReshapeNeuralLayer.h" />
    <ClInclude Include="SELUFunction.h" />
    <ClInclude Include="SGDOptimizer.h" />
    <ClInclude Include="ShapeNeuralLayer.h" />
    <ClInclude Include="SigmoidFunction.h" />
    <ClInclude Include="SoftplusFunction.h" />
    <ClInclude Include="SoftmaxNeuralLayer.h" />
    <ClInclude Include="SoftsignFunction.h" />
    <ClInclude Include="SqueezeNeuralLayer.h" />
    <ClInclude Include="SwishFunction.h" />
    <ClInclude Include="TanhFunction.h" />
    <ClInclude Include="Test.h" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="SuccessVisualStudioWindows.jpg" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>